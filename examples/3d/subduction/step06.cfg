# -*- Config -*- (syntax highlighting)
# ----------------------------------------------------------------------
#
# Brad T. Aagaard, U.S. Geological Survey
# Charles A. Williams, GNS Science
# Matthew G. Knepley, University of Chicago
#
# This code was developed as part of the Computational Infrastructure
# for Geodynamics (http://geodynamics.org).
#
# Copyright (c) 2010-2017 University of California, Davis
#
# See COPYING for license information.
#
# ----------------------------------------------------------------------
# PROBLEM DESCRIPTION
# ----------------------------------------------------------------------
#
# We simulate a slow-slip event (SSE) on a patch in the middle of the
# top of the slab.
#
# Materials
#   All four blocks use the linear, isotropic elastic material model
#   (mat_elastic.cfg).
#
# Boundary Conditions
#   Roller boundary conditions (pylithapp.cfg).
#
# Fault
#   Uniform oblique slip with a duration of one month on the slab
#   fault rupture patch.
#
# Output
#   We output the displacements for the slip impulses on the ground
#   surface ang at the fake cGPS locations defined by cgps_sites.txt.
#
# ----------------------------------------------------------------------
# RUNNING THE SIMULATON
# ----------------------------------------------------------------------
#
# Parameter files:
#   - pylithapp.cfg (common paramters, read by default)
#   - step06.cfg (main parameter file for step06)
#   - mat_elastic.cfg (material models and parameters)
#   - solver_fieldsplit.cfg (field split solver settings)
#
# We use the field split preconditioner with algebraic multigrid for
# the displacement fields and the custom preconditioner for the
# Lagrange multiplier field. We use these solver settings in several
# simulations, so we put them in a separate file.
#
# BEFORE RUNNING THE SIMULATION, run the Python script that generates
# the spatial database with the final slip distribution and the
# temporal database with the slip time function.
#
#   cd spatialdb && ./generate_slowslip.py
#
# TO RUN THE SIMULATION:
#
#   pylith step06.cfg mat_elastic.cfg solver_fieldsplit.cfg
#
# Output will be directed to the "output" directory.

# ----------------------------------------------------------------------
# Output of parameters used and simulation progress.
# ----------------------------------------------------------------------
[pylithapp]
dump_parameters.filename = output/step06-parameters.json
problem.progress_monitor.filename = output/step06-progress.txt

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.problem.formulation.time_step]
# Define the total time for the simulation and the time step size.
total_time = 30.0*day
dt = 2.0*day

# ----------------------------------------------------------------------
# faults
# ----------------------------------------------------------------------
[pylithapp.problem]
# We prescribe slip on the slab fault patch.
interfaces = [slab]

[pylithapp.problem.interfaces]
slab = pylith.faults.FaultCohesiveKin

[pylithapp.problem.interfaces.slab]
# Nodeset corresponding to the fault patch and buried edge.
label = fault_slabtop_patch
edge = fault_slabtop_patch_edge

# We must define the quadrature information for fault cells.
# The fault cells are 2D (surface).
quadrature.cell = pylith.feassemble.FIATSimplex
quadrature.cell.dimension = 2

# We use a time history slip function.
[pylithapp.problem.interfaces.slab.eq_srcs.rupture]
slip_function = pylith.faults.TimeHistorySlipFn

# The slip is defined in a spatial database.
[pylithapp.problem.interfaces.slab.eq_srcs.rupture.slip_function]
slip = spatialdata.spatialdb.SimpleGridDB
slip.label = Gaussian slip distribution for SSE
slip.filename = spatialdb/fault_slabtop_slowslip.spatialdb

# Use linear interpolation.
slip.query_type = linear

# We use a UniformDB to specify the slip initiation time.
slip_time = spatialdata.spatialdb.UniformDB
slip_time.label = Slip initiation time
slip_time.values = [slip-time]
slip_time.data = [0.0*year] 

# We use a temporal database to provide the slip time history.
time_history.label = Time history of slip
time_history.filename = spatialdb/fault_slabtop_slowslip.timedb

# Output
[pylithapp.problem.interfaces.slab.output]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step06-fault-slab.h5
vertex_info_fields = [normal_dir, strike_dir, dip_dir, final_slip_rupture]

# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
# For this problem, we want output over the entire domain, for the
# ground surface, and at simulated cGPS locations.
[pylithapp.problem.implicit]
output = [domain, subdomain, cgps_sites]

# Default output is for the entire domain.
# We need to set the type of output for the subdomain and points.
output.subdomain = pylith.meshio.OutputSolnSubset
output.cgps_sites = pylith.meshio.OutputSolnPoints

# Domain, subdomain, and points output ---------------------------------
[pylithapp.problem.formulation.output.domain]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step06-domain.h5

[pylithapp.problem.formulation.output.subdomain]
# Name of nodeset for top surface.
label = boundary_zpos
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step06-groundsurf.h5

# Specify output type, station file, and coordinate system for cgps_sites.
[pylithapp.problem.formulation.output.cgps_sites]
writer = pylith.meshio.DataWriterHDF5
writer.filename = output/step06-cgps_sites.h5

# File with coordinates of cGPS stations.
reader.filename = cgps_sites.txt

# Specify coordinate system used in cGPS station file.
coordsys = spatialdata.geocoords.CSGeo
coordsys.space_dim = 3
coordsys.datum_horiz = WGS84
coordsys.datum_vert = mean sea level

# Material output ------------------------------------------------------
[pylithapp.problem.materials.slab.output]
writer.filename = output/step06-slab.h5

[pylithapp.problem.materials.wedge.output]
writer.filename = output/step06-wedge.h5

[pylithapp.problem.materials.crust.output]
writer.filename = output/step06-crust.h5

[pylithapp.problem.materials.mantle.output]
writer.filename = output/step06-mantle.h5


# End of file
